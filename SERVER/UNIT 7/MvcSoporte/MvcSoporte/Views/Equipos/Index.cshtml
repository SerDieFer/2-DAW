@* @model IEnumerable<MvcSoporte.Models.Equipo> *@
@model PaginatedList<MvcSoporte.Models.Equipo>

@{
    ViewData["Title"] = "Index";
}

<h1>Equipos</h1>

<p>
    <a asp-action="Create">Crear nuevo equipo</a>
</p>

@* AGREGAR UN CUADRO DE BÚSQUEDA EN LA VISTA INDEX DE AVISOS *@ 
<form asp-action="Index">
    <div class="container">
        <div class="row align-items-start">
            <div class="col-md">
                <label class="control-label">Código Equipo:</label>
                <input type="text" name="strCadenaDeBusqueda"
                       value="@ViewData["BusquedaActual"]" class="form-control" />
            </div>
            <div class="col-md">
                <label class="control-label">Localizacion:</label>
                <select name="intLocalizacionesId" asp-items="ViewBag.LocalizacionId"
                        class="form-control">
                    <option value="">Todas</option>
                </select>
            </div>
            <div class="col-md align-self-end">
                <input type="submit" value="Buscar" class="btn btn-default" /> |
                <a asp-action="Index" class="btn btn-default">Lista completa</a>
            </div>
        </div>
    </div>
</form>


<table class="table" style="text-align: center;">
    <thead style="vertical-align: middle;">
        <tr>
            <th>
                Código Equipo
                @* @Html.DisplayNameFor(model => model.CodigoEquipo) *@
            </th>
            <th>
                Marca
                @* @Html.DisplayNameFor(model => model.Marca) *@
            </th>
            <th>
                Modelo
                @* @Html.DisplayNameFor(model => model.Modelo) *@
            </th>
            <th>
                Número de Serie
                @* @Html.DisplayNameFor(model => model.NumeroSerie) *@
            </th>
            <th>
                Características
                @* @Html.DisplayNameFor(model => model.Caracteristicas) *@
            </th>
            <th>
                Precio
                @* @Html.DisplayNameFor(model => model.Precio) *@
            </th>
            @* <th> *@
            @*     @Html.DisplayNameFor(model => model.PrecioCadena) *@
            @* </th> *@
            <th>
                Fecha de Compra
                @* @Html.DisplayNameFor(model => model.FechaCompra) *@
            </th>
            <th>
                Fecha de Baja
                @* @Html.DisplayNameFor(model => model.FechaBaja) *@
            </th>
            <th>
                Localización
                @* @Html.DisplayNameFor(model => model.Localizacion) *@
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.CodigoEquipo)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Marca)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Modelo)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.NumeroSerie)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Caracteristicas)
            </td>
            <td> 
                @Html.DisplayFor(modelItem => item.Precio)
            </td>
            @* <td> *@
            @*     @Html.DisplayFor(modelItem => item.PrecioCadena) *@
            @* </td> *@
            <td>
                @Html.DisplayFor(modelItem => item.FechaCompra)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.FechaBaja)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Localizacion.Descripcion)
            </td>
            <td style="text-align:center">
                <a asp-action="Edit" asp-route-id="@item.Id">Editar</a> |
                <a asp-action="Details" asp-route-id="@item.Id">Detalles</a> |
                <a asp-action="Delete" asp-route-id="@item.Id">Borrar</a>
            </td>
        </tr>
}
    </tbody>
</table>

@* Poner botones de página Siguiente y Anterior *@ 
@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}
<a asp-action="Index" asp-route-pageNumber="@(Model.PageIndex - 1)"
   asp-route-busquedaActual="@ViewData["BusquedaActual"]"
   asp-route-tipoAveriaIdActual="@ViewData["TipoAveriaIdActual"]"
   class="btn btn-outline-secondary @prevDisabled">
    Anterior
</a>

<a asp-action="Index" asp-route-pageNumber="@(Model.PageIndex + 1)"
   asp-route-busquedaActual="@ViewData["BusquedaActual"]"
   asp-route-tipoAveriaIdActual="@ViewData["TipoAveriaIdActual"]"
   class="btn btn-outline-secondary @nextDisabled">
    Siguiente
</a>

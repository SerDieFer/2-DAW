@* @model IEnumerable<Vestigio.Models.Product> *@
@model PaginatedList<Vestigio.Models.Product>

@{
    ViewData["Title"] = "Index";
}

<h1>Products</h1>

<p>
    <a asp-action="Create">Create New Product</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                Name
                @* @Html.DisplayNameFor(model => model.Name) *@
            </th>
            <th>
                Description
                @* @Html.DisplayNameFor(model => model.Description) *@
            </th>
            <th>
                Price
                @* @Html.DisplayNameFor(model => model.Price) *@
            </th>
            <th>
                Stock
                @* @Html.DisplayNameFor(model => model.Stock) *@
            </th>
            <th>
                Rarity Level
                @* @Html.DisplayNameFor(model => model.RarityLevel) *@
            </th>
            <th>
                Category
                @* @Html.DisplayNameFor(model => model.Category) *@
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Description)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Price)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Stock)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.RarityLevel)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Category.Name)
            </td>
            <td>
                <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
            </td>
        </tr>
}
    </tbody>
</table>

@* Poner botones de página Siguiente y Anterior *@ 
@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}
<a asp-action="Index" asp-route-pageNumber="@(Model.PageIndex - 1)"
   class="btn btn-outline-secondary @prevDisabled">
    Anterior
</a>
<a asp-action="Index" asp-route-pageNumber="@(Model.PageIndex + 1)"
   class="btn btn-outline-secondary @nextDisabled">
    Siguiente
</a> 
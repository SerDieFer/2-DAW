@* @model IEnumerable<MvcSoporte.Models.Empleado> *@ 
@model PaginatedList<MvcSoporte.Models.Empleado> 

@{
    ViewData["Title"] = "Index";
}

<h1>Empleados</h1>

<p>
    <a asp-action="Create">Crear nuevo empleado</a>
</p>

@* AGREGAR UN CUADRO DE BÚSQUEDA EN LA VISTA INDEX DE AVISOS *@ 
<form asp-action="Index">
    <div class="container">
        <div class="row align-items-start">
            <div class="col-md">
                <label class="control-label">Email:</label>
                <input type="text" name="strCadenaDeBusqueda"
                       value="@ViewData["BusquedaActual"]" class="form-control" />
            </div>
            <div class="col-md align-self-end">
                <input type="submit" value="Buscar" class="btn btn-default" /> |
                <a asp-action="Index" class="btn btn-default">Lista completa</a>
            </div>
        </div>
    </div>
</form>

<table class="table">
    <thead>
        <tr>
            <th>
                Empleados
            </th>
            <th>
                @* @Html.DisplayNameFor(model => model.Nombre) *@
            </th>
            <th>
                @* @Html.DisplayNameFor(model => model.Email) *@
            </th>
            <th>
                @* @Html.DisplayNameFor(model => model.Telefono) *@
            </th>
            <th>
                @* @Html.DisplayNameFor(model => model.FechaNacimiento) *@
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
    @foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Nombre)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Email)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Telefono)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.FechaNacimiento)
            </td>
            <td>
                <a asp-action="Edit" asp-route-id="@item.Id">Editar</a> |
                <a asp-action="Details" asp-route-id="@item.Id">Detalles</a> |
                <a asp-action="Delete" asp-route-id="@item.Id">Borrar</a>
            </td>
        </tr>
    }
    </tbody>
</table>

@* Poner botones de página Siguiente y Anterior *@ 
@{ 
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : ""; 
    var nextDisabled = !Model.HasNextPage ? "disabled" : ""; 
} 

<a asp-action="Index" asp-route-pageNumber="@(Model.PageIndex - 1)"
   asp-route-busquedaActual="@ViewData["BusquedaActual"]"
   class="btn btn-outline-secondary @prevDisabled"> 
    Anterior 
</a> 

<a asp-action="Index" asp-route-pageNumber="@(Model.PageIndex + 1)" 
   asp-route-busquedaActual="@ViewData["BusquedaActual"]"
   class="btn btn-outline-secondary @nextDisabled"> 
    Siguiente
</a>
